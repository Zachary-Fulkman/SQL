# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.


#1 Who are the top 5 artist based on popularity?
select artist_name Artist
,round(avg(popularity), 1)  Avg_Popularity
from spotifydata
group by Artist
order by Avg_Popularity desc
limit 5;

#2 What 10 songs are the longest, what is their title, and who are the artists?
select artist_name Artist
,track_name Song_Title
,duration_ms Duration
from spotifydata
order by Duration desc
limit 10;

#3 What are 10 songs that have the highest tempo below 150?
select track_name
,tempo
from spotifydata
where tempo <150
order by tempo desc
limit 10

#4 What is the average song duration for songs that have a popularity rating of 90 or more?
select round(avg(duration_ms)) Duration_ms
from spotifydata
where popularity >= 90;
